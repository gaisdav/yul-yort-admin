{"version":3,"sources":["view/UI/hooks/useViewModel.tsx","view/UI/components/common/Body/index.tsx","view/UI/components/common/Body/styles.module.scss","view/UI/hooks/useTitle.tsx","view/UI/components/common/Header/styles.module.scss","view/UI/components/common/SideBar/styles.module.scss","view/UI/components/common/Header/index.tsx","view/UI/components/common/SideBar/icons.tsx","view/UI/components/common/SideBar/index.tsx","view/UI/AuthorizedApp.tsx"],"names":["useViewModel","key","useStore","Body","children","className","css","body","module","exports","useTitle","useState","document","title","setTitle","target","querySelector","observer","MutationObserver","mutations","forEach","observe","childList","setDocumentTitle","Header","openDrawer","AppBar","position","Toolbar","IconButton","color","edge","onClick","Typography","variant","noWrap","component","icons","dashboard","agencies","orders","SideBar","open","onClose","onLogout","loading","Drawer","anchor","CONSTANTS","projectName","menuWrapper","List","routes","map","route","name","ListItem","listItem","routeName","link","ListItemIcon","ListItemText","Button","logoutButton","CircularProgress","size","NotFoundPage","lazy","AgencyPage","AgencyListPage","DashboardPage","OrdersPage","pages","constants","UNKNOWN_ROUTE","AuthorizedApp","setOpen","user","useRoute","params","navigate","router","handleOpenCloseSidebar","logout","a","redirectName","redirectParams","fallback","LoadingScreen"],"mappings":"yHACA,+CAOaA,EAAe,SAC1BC,GAIA,OAFcC,cAEDD,K,iCCZf,6BAMeE,IAJE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OAAO,qBAAKC,UAAWC,IAAIC,KAApB,SAA2BH,M,oBCHpCI,EAAOC,QAAU,CAAC,KAAO,uB,8FCWZC,EAAW,WACtB,MAA0BC,mBAAiBC,SAASC,OAAS,IAA7D,mBAAOA,EAAP,KAAcC,EAAd,KAEMC,EAASH,SAASI,cAAc,SAEhCC,EAAW,IAAIC,kBAAiB,SAAUC,GAC9CA,EAAUC,SAAQ,WAChBN,EAASF,SAASC,aAYtB,OAJIE,GACFE,EAASI,QAAQN,EALJ,CACbO,WAAW,IAON,CAAET,QAAOC,SAAUS,O,oBC9B5Bf,EAAOC,QAAU,CAAC,MAAQ,wB,oBCA1BD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,SAAW,yBAAyB,YAAc,4BAA4B,KAAO,qBAAqB,aAAe,+B,kQCK5Je,EAAsB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAAYZ,EAAY,EAAZA,MAChD,OACE,cAACa,EAAA,EAAD,CAAQC,SAAS,QAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACN,aAAW,cACXC,KAAK,QACLC,QAASP,EAJX,SAME,cAAC,IAAD,MAGDZ,GACC,cAACoB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAACC,UAAU,MAAM/B,UAAWC,IAAIO,MAA/D,SACGA,U,iKChBAwB,EAAmC,CAC9CC,UAAW,cAAC,IAAD,IACXC,SAAU,cAAC,IAAD,IACVC,OAAQ,cAAC,IAAD,K,QCcGC,EAAwB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC/D,OACE,eAACC,EAAA,EAAD,CAAQZ,QAAS,YAAaa,OAAO,OAAOL,KAAMA,EAAMC,QAASA,EAAjE,UACE,cAACjB,EAAA,EAAD,CAAQC,SAAS,WAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAACC,UAAU,MAAM/B,UAAWC,IAAIO,MAA/D,SACGmC,IAAUC,cAGb,cAACpB,EAAA,EAAD,CACEG,QAASW,EACTb,MAAM,UACN,aAAW,eAHb,SAKE,cAAC,IAAD,WAKN,sBAAKzB,UAAWC,IAAI4C,YAApB,UACE,cAACC,EAAA,EAAD,UACGC,IAAOC,KAAI,SAACC,GAAD,OACVjB,EAAMiB,EAAMC,MACV,cAACC,EAAA,EAAD,CAEExB,QAAS,WACPW,KAEFtC,UAAWC,IAAImD,SALjB,SAOE,eAAC,IAAD,CAAYC,UAAWJ,EAAMC,KAAMlD,UAAWC,IAAIqD,KAAlD,UACE,cAACC,EAAA,EAAD,UAAevB,EAAMiB,EAAMC,QAC3B,cAACM,EAAA,EAAD,UAAeP,EAAMzC,YARlByC,EAAMC,MAWX,UAIR,cAACO,EAAA,EAAD,CACE,aAAW,SACX5B,QAAQ,WACR7B,UAAWC,IAAIyD,aACf/B,QAASY,EAJX,SAMGC,EAAU,cAACmB,EAAA,EAAD,CAAkBC,KAAM,KAAS,0C,kBCtDhDC,EAAeC,gBAAK,kBAAM,iCAC1BC,EAAaD,gBAAK,kBAAM,6EACxBE,EAAiBF,gBAAK,kBAAM,6EAC5BG,EAAgBH,gBAAK,kBAAM,kCAC3BI,EAAaJ,gBAAK,kBAAM,sEAExBK,EAAK,aACTjC,SAAU,cAAC8B,EAAD,IACV,kBAAmB,cAACD,EAAD,IACnB9B,UAAW,cAACgC,EAAD,IACX9B,OAAQ,cAAC+B,EAAD,KACPE,IAAUC,cAAgB,cAACR,EAAD,KAGhBS,EAAoB1D,aAAS,WACxC,MAAwBN,oBAAkB,GAA1C,mBAAO+B,EAAP,KAAakC,EAAb,KAEQ/D,EAAUH,cAAVG,MACFgE,EAAO7E,YAAsB,QACnC,EAGI8E,cAHJ,IACExB,MAASC,EADX,EACWA,KAAMwB,EADjB,EACiBA,OACLC,EAFZ,EAEEC,OAAUD,SAGNE,EAAyB,WAC7BN,GAASlC,IAGLyC,EAAM,uCAAG,sBAAAC,EAAA,sEACPP,EAAKM,SADE,OAGbH,EAAS,QAAS,CAAEK,aAAc9B,EAAM+B,eAAgBP,IAH3C,2CAAH,qDAMZ,OACE,qCACE,cAAC,EAAD,CAAQtD,WAAYyD,EAAwBrE,MAAOA,IAEnD,cAAC,EAAD,CACE6B,KAAMA,EACNC,QAASuC,EACTtC,SAAUuC,EACVtC,QAASgC,EAAKhC,UAGhB,cAAC1C,EAAA,EAAD,UACE,cAAC,WAAD,CAAUoF,SAAU,cAACC,EAAA,EAAD,IAApB,SACGhB,EAAMjB,IAASiB,EAAMC,IAAUC,yBAO3BC","file":"static/js/13.019d3920.chunk.js","sourcesContent":["import { IStoreViewModels } from \"../../../store/types\";\nimport { useStore } from \"./useStore\";\n\n/**\n * Возвращает запрошенную ViewModel из хранилища.\n *\n * @param {keyof IStoreViewModels} key - ключ ViewModel-и в хранилище.\n */\nexport const useViewModel = <T extends unknown>(\n  key: keyof IStoreViewModels\n): T => {\n  const store = useStore();\n\n  return store[key] as T;\n};\n","import { FC } from \"react\";\nimport css from \"./styles.module.scss\";\n\nconst Body: FC = ({ children }) => {\n  return <div className={css.body}>{children}</div>;\n};\n\nexport default Body;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"styles_body__7aA_M\"};","import { useState } from \"react\";\nimport { setDocumentTitle } from \"src/libs/utils\";\n\ninterface IUseTitleReturn {\n  title: string;\n  setTitle: (title: string) => void;\n}\n\n// TODO вынести эту логику в AppVM или AppVM не должен знать о браузере ничего?\n/**\n * Отслеживает и возвращает измененный заголовок страницы.\n */\nexport const useTitle = (): IUseTitleReturn => {\n  const [title, setTitle] = useState<string>(document.title || \"\");\n\n  const target = document.querySelector(\"title\");\n\n  const observer = new MutationObserver(function (mutations) {\n    mutations.forEach(function () {\n      setTitle(document.title);\n    });\n  });\n\n  const config = {\n    childList: true,\n  };\n\n  if (target) {\n    observer.observe(target, config);\n  }\n\n  return { title, setTitle: setDocumentTitle };\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__30_lW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__3Kn8f\",\"listItem\":\"styles_listItem__1ypiD\",\"menuWrapper\":\"styles_menuWrapper__17ELK\",\"link\":\"styles_link__3f_MU\",\"logoutButton\":\"styles_logoutButton__2Y58K\"};","import { FC } from \"react\";\nimport { AppBar, IconButton, Toolbar, Typography } from \"@mui/material\";\nimport { IAppBar } from \"./types\";\nimport MenuRoundedIcon from \"@mui/icons-material/MenuRounded\";\nimport css from \"./styles.module.scss\";\n\nexport const Header: FC<IAppBar> = ({ openDrawer, title }) => {\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={openDrawer}\n        >\n          <MenuRoundedIcon />\n        </IconButton>\n\n        {title && (\n          <Typography variant=\"h6\" noWrap component=\"div\" className={css.title}>\n            {title}\n          </Typography>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import { ReactNode } from \"react\";\nimport BarChartRoundedIcon from \"@mui/icons-material/BarChartRounded\";\nimport FormatListBulletedRoundedIcon from \"@mui/icons-material/FormatListBulletedRounded\";\nimport LuggageRoundedIcon from \"@mui/icons-material/LuggageRounded\";\n\nexport const icons: Record<string, ReactNode> = {\n  dashboard: <BarChartRoundedIcon />,\n  agencies: <FormatListBulletedRoundedIcon />,\n  orders: <LuggageRoundedIcon />,\n};\n","import React, { FC } from \"react\";\nimport {\n  AppBar,\n  Button,\n  CircularProgress,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport CloseRoundedIcon from \"@mui/icons-material/CloseRounded\";\nimport { Link as RouterLink } from \"react-router5\";\nimport { ISideBar } from \"./types\";\nimport css from \"./styles.module.scss\";\nimport routes from \"../../../../../router/routes\";\nimport { icons } from \"./icons\";\nimport { CONSTANTS } from \"../../../../../constants/globalConstants\";\n\nexport const SideBar: FC<ISideBar> = ({ open, onClose, onLogout, loading }) => {\n  return (\n    <Drawer variant={\"temporary\"} anchor=\"left\" open={open} onClose={onClose}>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap component=\"div\" className={css.title}>\n            {CONSTANTS.projectName}\n          </Typography>\n\n          <IconButton\n            onClick={onClose}\n            color=\"inherit\"\n            aria-label=\"close drawer\"\n          >\n            <CloseRoundedIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <div className={css.menuWrapper}>\n        <List>\n          {routes.map((route) =>\n            icons[route.name] ? (\n              <ListItem\n                key={route.name}\n                onClick={() => {\n                  onClose();\n                }}\n                className={css.listItem}\n              >\n                <RouterLink routeName={route.name} className={css.link}>\n                  <ListItemIcon>{icons[route.name]}</ListItemIcon>\n                  <ListItemText>{route.title}</ListItemText>\n                </RouterLink>\n              </ListItem>\n            ) : null\n          )}\n        </List>\n\n        <Button\n          aria-label=\"logout\"\n          variant=\"outlined\"\n          className={css.logoutButton}\n          onClick={onLogout}\n        >\n          {loading ? <CircularProgress size={25} /> : \"Выйти\"}\n        </Button>\n      </div>\n    </Drawer>\n  );\n};\n","import { FC, lazy, Suspense, useState } from \"react\";\nimport { constants } from \"router5\";\nimport { useTitle } from \"./hooks/useTitle\";\nimport { useRoute } from \"react-router5\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { LoadingScreen } from \"./components/common/LoadingScreen\";\nimport { Header } from \"./components/common/Header\";\nimport { SideBar } from \"./components/common/SideBar\";\nimport Body from \"./components/common/Body\";\nimport { useViewModel } from \"./hooks/useViewModel\";\nimport { IUserVM } from \"../viewModels/User/types\";\n\nconst NotFoundPage = lazy(() => import(\"./pages/notFound\"));\nconst AgencyPage = lazy(() => import(\"./pages/agency\"));\nconst AgencyListPage = lazy(() => import(\"./pages/agencies\"));\nconst DashboardPage = lazy(() => import(\"./pages/dashboard\"));\nconst OrdersPage = lazy(() => import(\"./pages/orders\"));\n\nconst pages = {\n  agencies: <AgencyListPage />,\n  \"agencies.agency\": <AgencyPage />,\n  dashboard: <DashboardPage />,\n  orders: <OrdersPage />,\n  [constants.UNKNOWN_ROUTE]: <NotFoundPage />,\n};\n\nexport const AuthorizedApp: FC = observer(() => {\n  const [open, setOpen] = useState<boolean>(false);\n\n  const { title } = useTitle();\n  const user = useViewModel<IUserVM>(\"user\");\n  const {\n    route: { name, params },\n    router: { navigate },\n  } = useRoute();\n\n  const handleOpenCloseSidebar = () => {\n    setOpen(!open);\n  };\n\n  const logout = async () => {\n    await user.logout();\n\n    navigate(\"login\", { redirectName: name, redirectParams: params });\n  };\n\n  return (\n    <>\n      <Header openDrawer={handleOpenCloseSidebar} title={title} />\n\n      <SideBar\n        open={open}\n        onClose={handleOpenCloseSidebar}\n        onLogout={logout}\n        loading={user.loading}\n      />\n\n      <Body>\n        <Suspense fallback={<LoadingScreen />}>\n          {pages[name] || pages[constants.UNKNOWN_ROUTE]}\n        </Suspense>\n      </Body>\n    </>\n  );\n});\n\nexport default AuthorizedApp;\n"],"sourceRoot":""}