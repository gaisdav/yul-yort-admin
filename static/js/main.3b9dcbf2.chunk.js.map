{"version":3,"sources":["view/UI/components/common/LoadingScreen/index.tsx","view/UI/hooks/useStore.tsx","libs/api/index.ts","store/LibsStore.ts","data/repositories/BaseRepository.ts","data/repositories/Agency/index.ts","data/repositories/User/index.ts","data/repositories/Order/index.ts","store/RepositoriesStore.ts","data/entities/Agency/AgencyItem.ts","data/entities/Agency/Agency.ts","data/services/Agency/index.ts","data/services/User/index.ts","data/services/Order/index.ts","store/ServicesStore.ts","view/viewModels/BaseVM.ts","view/viewModels/mappers/index.ts","view/viewModels/Agency/index.ts","view/viewModels/User/index.ts","view/viewModels/NotificationsVM.ts","view/viewModels/Order/index.ts","store/ViewModelsStore.ts","reportWebVitals.ts","serviceWorkerRegistration.ts","view/UI/pages/errorBoundaryPage/index.tsx","view/UI/components/common/Notify/index.tsx","view/UI/App.tsx","view/UI/hooks/useNotification.tsx","view/UI/index.tsx","view/UI/InitErrorApp.tsx","view/UI/theme/getCssVar.ts","view/UI/theme/index.ts","router/middlewaries/utils.ts","index.ts","router/index.ts","router/middlewaries/onActivate.ts","router/middlewaries/checkAuthorization.ts","router/middlewaries/documentTitle.ts","store/index.ts","libs/mocks/data/agencies.ts","libs/mocks/utils/getTimeout.ts","libs/mocks/utils/getAuthCookie.ts","libs/mocks/handlers.ts","libs/mocks/browser.ts","constants/Endpoints.ts","constants/globalConstants.ts","view/UI/pages/errorBoundaryPage/styles.module.scss","view/UI/components/shared/AgencyCreateEditForm/mappers.ts","libs/utils/getErrorText.ts","libs/utils/setDocumentTitle.ts","libs/utils/checkToken.ts","router/routes.ts"],"names":["LoadingScreen","id","className","useStore","useRouter","getDependencies","store","Api","router","path","params","a","url","URL","baseUrl","search","URLSearchParams","toString","fullUrl","fetch","response","ok","this","errorHandler","json","method","body","JSON","stringify","Error","status","statusText","navigate","LibsStore","libs","api","BaseRepository","AgencyRepository","get","EEndpoints","AGENCY","post","AGENCY_EDIT","delete","AGENCY_DELETE","AGENCY_LIST","AGENCY_CREATE","UserRepository","LOGIN","LOGOUT","OrderRepository","RepositoriesStore","repositories","agency","user","order","AgencyItem","dto","agencyName","phones","createDate","format","Date","makeObservable","observable","Agency","editedDate","description","AgencyService","repository","getAgency","fields","getTime","VMPhonesRequestFormatter","editAgency","deleteAgency","getList","agencies","map","createAgency","agencyItem","UserService","login","logout","OrderService","ServicesStore","services","BaseVM","notify","loading","error","setLoading","action","unsetLoading","setError","unsetError","err","name","message","errorMapper","errorNotification","AgencyVM","notificationsVM","service","editLoading","loadingList","searchValue","_agencies","searchAgency","value","toLocaleLowerCase","isLoadingItem","indexOf","setLoadingItem","push","unsetLoadingItem","index","splice","setEditLoading","unsetEditLoading","runInAction","successNotification","list","newAgency","uuid","agenciesCopy","filter","includes","some","phone","UserVM","NotificationsVM","notification","addNotification","type","removeNotification","OrderVM","orders","ViewModelsStore","notifications","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ErrorBoundary","props","handleExpand","setState","expanded","errorInfo","offline","onLine","timerID","setInterval","clearInterval","stack","css","errorBoundary","Typography","align","icon","color","fontSize","variant","onClick","collapseTitle","IconButton","Collapse","in","timeout","unmountOnExit","collapse","componentStack","appWrapper","notConnectText","children","React","Component","Notify","open","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","closeText","UnauthorizedApp","lazy","AuthorizedApp","App","observer","isUnauthorized","useRoute","route","fallback","process","href","origin","addEventListener","headers","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","getCssVar","varName","getComputedStyle","document","documentElement","getPropertyValue","trim","theme","createTheme","palette","common","white","main","background","default","components","MuiPaper","styleOverrides","root","borderRadius","MuiAppBar","MuiDrawer","paper","MuiFormHelperText","marginLeft","marginTop","MuiDivider","backgroundColor","MuiSnackbar","anchorOriginTopRight","left","wordBreak","typography","button","textTransform","InitErrorPage","cache","getRouteByToStateName","toStateName","dependencies","split","forEach","routes","find","require","worker","start","onUnhandledRequest","middlewares","createRouter","allowNotFound","queryParamsMode","autoCleanUp","usePlugin","browserPlugin","useHash","BUILD_MODE","middleware","useMiddleware","createAppRouter","toState","onActivate","_","done","hasToken","checkToken","redirect","CONSTANTS","defaultRoute","constants","UNKNOWN_ROUTE","auth","redirectName","redirectParams","setDocumentTitle","title","projectName","viewModels","setDependencies","ReactDOM","render","ThemeProvider","CssBaseline","StyledEngineProvider","injectFirst","getElementById","initApp","getTimeout","delay","Math","floor","random","getAuthCookie","expires","setDate","getDate","tokenCookieKey","handlers","rest","req","res","ctx","searchParams","result","Object","keys","length","parse","unshift","cookie","setupWorker","numberPattern","module","exports","UIPhonesFormatter","phoneValue","ErrorsDictionary","required","min","max","maxLength","minLength","getErrorText","errors","valuePath","undefined","Cookies"],"mappings":"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","file":"static/js/main.3b9dcbf2.chunk.js","sourcesContent":["import { FC } from \"react\";\n\n/**\n * Данная верстка полностью идентична с версткой в файле public/index.html\n * Если что-то поменяется, то нужно менять в обоих местах.\n */\nexport const LoadingScreen: FC = () => (\n  <div id=\"loading-dots__wrapper\">\n    <div id=\"loading-dots\">\n      <div className=\"title\">Yul</div>\n      <div className=\"title subtitle\">Yort</div>\n      <div className=\"dot first-dots\" />\n      <div className=\"dot second-dots\" />\n      <div className=\"dot third-dots\" />\n    </div>\n  </div>\n);\n","import { IStoreViewModels } from \"../../../store/types\";\nimport { useRouter } from \"react-router5\";\n\n/**\n * Возвращает хранилище целиком.\n */\nexport const useStore = (): IStoreViewModels => {\n  return useRouter().getDependencies().store;\n};\n","import { baseUrl, EEndpoints } from \"../../constants/Endpoints\";\nimport { IApi } from \"./types\";\nimport { Router } from \"router5/dist/types/router\";\nimport { IDependencies } from \"../../router/types\";\n\nexport class Api implements IApi {\n  constructor(private router: Router<IDependencies>) {}\n\n  async get<R, P = undefined>(path: EEndpoints, params?: P): Promise<R> {\n    const url = new URL(path, baseUrl);\n\n    url.search = new URLSearchParams(params as any).toString();\n    const fullUrl = url.toString();\n\n    const response = await fetch(fullUrl);\n\n    if (!response.ok) {\n      this.errorHandler(response);\n    }\n\n    return await response.json();\n  }\n\n  async post<R, P>(path: EEndpoints, params?: P): Promise<R> {\n    const url = new URL(path, baseUrl).toString();\n\n    let response = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(params),\n    });\n\n    if (!response.ok) {\n      this.errorHandler(response);\n    }\n\n    return await response.json();\n  }\n\n  async delete<R, P>(path: EEndpoints, params?: P): Promise<R> {\n    const url = new URL(path, baseUrl).toString();\n\n    let response = await fetch(url, {\n      method: \"DELETE\",\n      body: JSON.stringify(params),\n    });\n\n    if (!response.ok) {\n      throw Error(response.status + \" \" + response.statusText);\n    }\n\n    return await response.json();\n  }\n\n  errorHandler(response: Response) {\n    if (response.status === 401) {\n      this.router.navigate(\"login\");\n    }\n\n    throw Error(response.status + \" \" + response.statusText);\n  }\n}\n","import { ILibs, IStoreLibs } from \"./types\";\nimport { Api } from \"../libs/api\";\nimport { IDependencies } from \"../router/types\";\nimport { Router } from \"router5/dist/types/router\";\n\nexport class LibsStore implements IStoreLibs {\n  private libs: ILibs = {};\n\n  constructor(private router: Router<IDependencies>) {}\n\n  get api() {\n    if (this.libs.api) {\n      return this.libs.api;\n    }\n\n    this.libs.api = new Api(this.router);\n\n    return this.libs.api;\n  }\n}\n","import { IApi } from \"../../libs/api/types\";\n\nexport class BaseRepository {\n  constructor(protected api: IApi) {}\n}\n","import { IAgencyRepository } from \"./types\";\nimport {\n  IAgencyItemResponseDTO,\n  IAgencyRequestCreateParams,\n  IAgencyRequestDeleteParams,\n  IAgencyRequestEditParams,\n  IAgencyRequestParams,\n  IAgencyResponseDTO,\n} from \"../../entities/Agency/types\";\nimport { EEndpoints } from \"../../../constants/Endpoints\";\nimport { BaseRepository } from \"../BaseRepository\";\n\nexport class AgencyRepository\n  extends BaseRepository\n  implements IAgencyRepository\n{\n  async getAgency(params: IAgencyRequestParams): Promise<IAgencyResponseDTO> {\n    return await this.api.get<IAgencyResponseDTO, IAgencyRequestParams>(\n      EEndpoints.AGENCY,\n      params\n    );\n  }\n\n  async editAgency(\n    params: IAgencyRequestEditParams\n  ): Promise<IAgencyResponseDTO> {\n    return await this.api.post<IAgencyResponseDTO, IAgencyRequestEditParams>(\n      EEndpoints.AGENCY_EDIT,\n      params\n    );\n  }\n\n  async deleteAgency(\n    params: IAgencyRequestDeleteParams\n  ): Promise<IAgencyResponseDTO> {\n    return await this.api.delete<\n      IAgencyResponseDTO,\n      IAgencyRequestDeleteParams\n    >(EEndpoints.AGENCY_DELETE, params);\n  }\n\n  async getList(): Promise<IAgencyItemResponseDTO[]> {\n    return await this.api.get<IAgencyItemResponseDTO[]>(EEndpoints.AGENCY_LIST);\n  }\n\n  async createAgency(\n    params: IAgencyRequestCreateParams\n  ): Promise<IAgencyItemResponseDTO> {\n    return await this.api.post<\n      IAgencyItemResponseDTO,\n      IAgencyRequestCreateParams\n    >(EEndpoints.AGENCY_CREATE, params);\n  }\n}\n","import { IUserRepository } from \"./types\";\nimport { EEndpoints } from \"../../../constants/Endpoints\";\nimport { BaseRepository } from \"../BaseRepository\";\n\nexport class UserRepository extends BaseRepository implements IUserRepository {\n  async login(): Promise<void> {\n    await this.api.post(EEndpoints.LOGIN);\n  }\n  async logout(): Promise<void> {\n    await this.api.post(EEndpoints.LOGOUT);\n  }\n}\n","import { BaseRepository } from \"../BaseRepository\";\nimport { IOrderRepository } from \"./types\";\nimport {\n  IOrderItemRequestParams,\n  IOrderItemResponseDTO,\n} from \"../../entities/Order/types\";\nimport { EEndpoints } from \"../../../constants/Endpoints\";\n\nexport class OrderRepository\n  extends BaseRepository\n  implements IOrderRepository\n{\n  async getList(\n    params: IOrderItemRequestParams\n  ): Promise<IOrderItemResponseDTO[]> {\n    return await this.api.get<IOrderItemResponseDTO[], IOrderItemRequestParams>(\n      // TODO заменить на нужный endpoint\n      EEndpoints.AGENCY_LIST,\n      params\n    );\n  }\n}\n","import { IRepositories, IStoreLibs, IStoreRepositories } from \"./types\";\nimport { AgencyRepository } from \"../data/repositories/Agency\";\nimport { UserRepository } from \"../data/repositories/User\";\nimport { OrderRepository } from \"../data/repositories/Order\";\n\nexport class RepositoriesStore implements IStoreRepositories {\n  private repositories: IRepositories = {};\n\n  get agency() {\n    if (!this.repositories.agency) {\n      this.repositories.agency = new AgencyRepository(this.libs.api);\n    }\n\n    return this.repositories.agency;\n  }\n\n  get user() {\n    if (!this.repositories.user) {\n      this.repositories.user = new UserRepository(this.libs.api);\n    }\n\n    return this.repositories.user;\n  }\n\n  get order() {\n    if (!this.repositories.order) {\n      this.repositories.order = new OrderRepository(this.libs.api);\n    }\n\n    return this.repositories.order;\n  }\n\n  constructor(private libs: IStoreLibs) {}\n}\n","import { makeObservable, observable } from \"mobx\";\nimport { IAgencyItemEntity, IAgencyItemResponseDTO } from \"./types\";\nimport { format } from \"date-fns\";\n\nexport class AgencyItem implements IAgencyItemEntity {\n  id: ID = \"\";\n  agencyName: string = \"\";\n  phones?: string[];\n  createDate: string;\n\n  constructor(dto: IAgencyItemResponseDTO) {\n    this.id = dto.id;\n    this.agencyName = dto.agencyName;\n    this.phones = dto.phones;\n    this.createDate = format(new Date(dto.createDate), \"dd.MM.yyyy  HH:mm\");\n\n    makeObservable(this, {\n      id: observable,\n      agencyName: observable,\n      phones: observable,\n      createDate: observable,\n    });\n  }\n}\n","import { makeObservable, observable } from \"mobx\";\nimport { IAgencyEntity, IAgencyResponseDTO } from \"./types\";\nimport { AgencyItem } from \"./AgencyItem\";\nimport { format } from \"date-fns\";\n\nexport class Agency extends AgencyItem implements IAgencyEntity {\n  editedDate: string | undefined;\n  description: string | undefined = \"\";\n\n  constructor(dto: IAgencyResponseDTO) {\n    super({\n      id: dto.id,\n      createDate: dto.createDate,\n      agencyName: dto.agencyName,\n      phones: dto.phones,\n    });\n\n    this.description = dto.description;\n    this.editedDate = dto.editedDate\n      ? format(new Date(dto.editedDate), \"dd.MM.yyyy  HH:mm\")\n      : \"\";\n\n    makeObservable(this, {\n      editedDate: observable,\n      description: observable,\n    });\n  }\n}\n","import { IAgencyService } from \"./types\";\nimport {\n  IAgencyRequestEditParams,\n  IAgencyEntity,\n  IAgencyRequestParams,\n  IAgencyRequestDeleteParams,\n  IAgencyItemEntity,\n  IAgencyRequestCreateParams,\n} from \"../../entities/Agency/types\";\nimport { IAgencyRepository } from \"../../repositories/Agency/types\";\nimport { Agency, AgencyItem } from \"../../entities/Agency\";\nimport { VMPhonesRequestFormatter } from \"../../../view/UI/components/shared/AgencyCreateEditForm/mappers\";\nimport { ICreateOrEditAgencyFormFields } from \"../../../view/UI/components/shared/AgencyCreateEditForm/types\";\n\nexport class AgencyService implements IAgencyService {\n  constructor(private repository: IAgencyRepository) {}\n\n  async getAgency(params: IAgencyRequestParams): Promise<IAgencyEntity> {\n    const agency = await this.repository.getAgency(params);\n\n    return new Agency(agency);\n  }\n\n  async editAgency(\n    fields: ICreateOrEditAgencyFormFields\n  ): Promise<IAgencyEntity> {\n    const params: IAgencyRequestEditParams = {\n      ...fields,\n      editedDate: new Date().getTime(),\n      phones: VMPhonesRequestFormatter(fields.phones),\n    };\n    const agency = await this.repository.editAgency(params);\n\n    return new Agency(agency);\n  }\n\n  async deleteAgency(\n    params: IAgencyRequestDeleteParams\n  ): Promise<IAgencyEntity> {\n    const agency = await this.repository.deleteAgency(params);\n\n    return new Agency(agency);\n  }\n\n  async getList(): Promise<IAgencyItemEntity[]> {\n    const agencies = await this.repository.getList();\n\n    return agencies.map((agency) => new AgencyItem(agency));\n  }\n\n  async createAgency(\n    fields: ICreateOrEditAgencyFormFields\n  ): Promise<IAgencyEntity> {\n    const params: IAgencyRequestCreateParams = {\n      ...fields,\n      createDate: new Date().getTime(),\n      phones: VMPhonesRequestFormatter(fields.phones),\n    };\n\n    const agencyItem = await this.repository.createAgency(params);\n\n    return new AgencyItem(agencyItem);\n  }\n}\n","import { IUserRepository } from \"../../repositories/User/types\";\nimport { IUserService } from \"./types\";\n\nexport class UserService implements IUserService {\n  constructor(private repository: IUserRepository) {}\n\n  async login(): Promise<void> {\n    await this.repository.login();\n  }\n\n  async logout(): Promise<void> {\n    await this.repository.logout();\n  }\n}\n","import { IOrderService } from \"./types\";\nimport {\n  IOrderItemEntity,\n  IOrderItemRequestParams,\n} from \"../../entities/Order/types\";\nimport { IOrderRepository } from \"../../repositories/Order/types\";\n\nexport class OrderService implements IOrderService {\n  constructor(private repository: IOrderRepository) {}\n\n  getList = async (\n    params: IOrderItemRequestParams\n  ): Promise<IOrderItemEntity[]> => {\n    return this.repository.getList(params);\n  };\n}\n","import { IServices, IStoreRepositories, IStoreServices } from \"./types\";\nimport { AgencyService } from \"../data/services/Agency\";\nimport { UserService } from \"../data/services/User\";\nimport { OrderService } from \"../data/services/Order\";\n\nexport class ServicesStore implements IStoreServices {\n  private services: IServices = {};\n\n  get agency() {\n    if (!this.services.agency) {\n      this.services.agency = new AgencyService(this.repositories.agency);\n    }\n\n    return this.services.agency;\n  }\n\n  get user() {\n    if (!this.services.user) {\n      this.services.user = new UserService(this.repositories.user);\n    }\n\n    return this.services.user;\n  }\n\n  get order() {\n    if (!this.services.order) {\n      this.services.order = new OrderService(this.repositories.order);\n    }\n\n    return this.services.order;\n  }\n\n  constructor(private repositories: IStoreRepositories) {}\n}\n","import { IBaseVM, IError, INotificationsVM } from \"./types\";\nimport { action, makeObservable, observable } from \"mobx\";\nimport { errorMapper } from \"./mappers\";\n\n// переименовать в Controller?\nexport class BaseVM implements IBaseVM {\n  loading: boolean = false;\n  error: IError | null = null;\n\n  constructor(protected notify: INotificationsVM) {\n    makeObservable(this, {\n      loading: observable,\n      error: observable,\n      setLoading: action,\n      unsetLoading: action,\n      setError: action,\n      unsetError: action,\n    });\n  }\n\n  setLoading(): void {\n    this.loading = true;\n  }\n\n  unsetLoading(): void {\n    this.loading = false;\n  }\n\n  setError(err: unknown): void {\n    this.error = errorMapper(err);\n\n    this.notify.errorNotification(`${this.error.name} ${this.error.message}`);\n    throw err;\n  }\n\n  unsetError(): void {\n    this.error = null;\n  }\n}\n","import { IError } from \"../types\";\n\nexport const errorMapper = (err: unknown): IError => {\n  let error: IError = {\n    name: \"\",\n    message: \"\",\n  };\n\n  if (err instanceof Error) {\n    error = {\n      name: err.name,\n      message: err.message,\n    };\n  } else if (typeof err === \"string\") {\n    error = {\n      name: \"Неопределенная ошибка\",\n      message: err,\n    };\n  } else {\n    throw new Error(\"Не удалось распознать ошибку\");\n  }\n\n  return error;\n};\n","import { action, makeObservable, observable, runInAction } from \"mobx\";\nimport { v4 as uuid } from \"uuid\";\nimport { format } from \"date-fns\";\nimport { BaseVM } from \"../BaseVM\";\nimport { IAgencyVM } from \"./types\";\nimport {\n  IAgencyEntity,\n  IAgencyRequestParams,\n  IAgencyRequestDeleteParams,\n  IAgencyItemEntity,\n} from \"../../../data/entities/Agency/types\";\nimport { IAgencyService } from \"../../../data/services/Agency/types\";\nimport { INotificationsVM } from \"../types\";\nimport { ICreateOrEditAgencyFormFields } from \"../../UI/components/shared/AgencyCreateEditForm/types\";\nimport { VMPhonesRequestFormatter } from \"src/view/UI/components/shared/AgencyCreateEditForm/mappers\";\n\nexport class AgencyVM extends BaseVM implements IAgencyVM {\n  editLoading: boolean = false;\n  loadingList: ID[] = [];\n\n  agency: IAgencyEntity | null = null;\n  searchValue: string = \"\";\n\n  private _agencies: IAgencyItemEntity[] | null = null;\n\n  get agencies() {\n    return (\n      this._agencies &&\n      this._agencies.filter(\n        (agency) =>\n          agency.agencyName.toLocaleLowerCase().includes(this.searchValue) ||\n          agency.phones?.some((phone) => phone.includes(this.searchValue))\n      )\n    );\n  }\n\n  constructor(\n    notificationsVM: INotificationsVM,\n    private service: IAgencyService\n  ) {\n    super(notificationsVM);\n\n    makeObservable(this, {\n      agency: observable,\n      editLoading: observable,\n      loadingList: observable,\n      searchValue: observable,\n      getAgency: action,\n      editAgency: action,\n      getList: action,\n      createAgency: action,\n      setLoadingItem: action,\n      unsetLoadingItem: action,\n      setEditLoading: action,\n      unsetEditLoading: action,\n    });\n  }\n\n  searchAgency = (value: string) => {\n    this.searchValue = value.toLocaleLowerCase();\n  };\n\n  isLoadingItem = (id: ID) => this.loadingList.indexOf(id) !== -1;\n\n  setLoadingItem = (id: ID) => {\n    this.loadingList.push(id);\n  };\n\n  unsetLoadingItem = (id: ID) => {\n    const index = this.loadingList.indexOf(id);\n\n    if (index >= 0) {\n      this.loadingList.splice(index, 1);\n    }\n  };\n\n  setEditLoading = () => {\n    this.editLoading = true;\n  };\n\n  unsetEditLoading = () => {\n    this.editLoading = false;\n  };\n\n  getAgency = async (params: IAgencyRequestParams) => {\n    this.setLoading();\n    this.unsetError();\n\n    try {\n      const agency = await this.service.getAgency(params);\n\n      runInAction(() => {\n        this.agency = agency;\n      });\n    } catch (err) {\n      this.setError(err);\n    } finally {\n      this.unsetLoading();\n    }\n  };\n\n  editAgency = async (fields: ICreateOrEditAgencyFormFields) => {\n    this.setEditLoading();\n\n    try {\n      this.agency = await this.service.editAgency(fields);\n      this.notify.successNotification(\"Данные сохранены\");\n    } catch (err) {\n      // @ts-ignore\n      const message = `${err?.name} ${err?.message}`;\n      this.notify.errorNotification(message);\n\n      throw err;\n    } finally {\n      this.unsetEditLoading();\n    }\n  };\n\n  deleteAgency = async (params: IAgencyRequestDeleteParams) => {\n    this.setLoading();\n\n    try {\n      await this.service.deleteAgency(params);\n      this.notify.successNotification(\n        `Агентство \"${this.agency?.agencyName}\" удалено`\n      );\n      this.agency = null;\n    } catch (err) {\n      this.setError(err);\n    } finally {\n      this.unsetLoading();\n    }\n  };\n\n  getList = async () => {\n    this.setLoading();\n    this.unsetError();\n\n    try {\n      const list = await this.service.getList();\n\n      runInAction(() => {\n        this._agencies = list;\n      });\n    } catch (err) {\n      this.setError(err);\n    } finally {\n      this.unsetLoading();\n    }\n  };\n\n  createAgency = async (fields: ICreateOrEditAgencyFormFields) => {\n    this.setEditLoading();\n\n    const newAgency = {\n      ...fields,\n      id: uuid(),\n      createDate: format(new Date(), \"dd.MM.yyyy  HH:mm\"),\n      phones: VMPhonesRequestFormatter(fields.phones),\n    };\n\n    this.setLoadingItem(newAgency.id);\n    const agenciesCopy = this._agencies ? [...this._agencies] : [];\n    runInAction(() => {\n      this._agencies = [newAgency, ...agenciesCopy];\n    });\n\n    try {\n      const agencyItem = await this.service.createAgency(fields);\n\n      runInAction(() => {\n        this._agencies = [agencyItem, ...agenciesCopy];\n      });\n\n      this.notify.successNotification(\n        `Агенство ${agencyItem.agencyName} создано`\n      );\n    } catch (err) {\n      this.setError(err);\n    } finally {\n      this.unsetEditLoading();\n      this.unsetLoadingItem(newAgency.id);\n    }\n  };\n}\n","import { BaseVM } from \"../BaseVM\";\nimport { makeObservable, observable } from \"mobx\";\n\nimport { IUserEntity } from \"../../../data/entities/User/types\";\nimport { IUserService } from \"../../../data/services/User/types\";\nimport { IUserVM } from \"./types\";\nimport { INotificationsVM } from \"../types\";\n\nexport class UserVM extends BaseVM implements IUserVM {\n  user: IUserEntity | null = null;\n\n  constructor(\n    notificationsVM: INotificationsVM,\n    private service: IUserService\n  ) {\n    super(notificationsVM);\n    makeObservable(this, {\n      user: observable,\n    });\n  }\n\n  login = async () => {\n    this.setLoading();\n    this.unsetError();\n\n    try {\n      await this.service.login();\n      this.notify.successNotification(\"Добро пожаловать!\");\n    } catch (err) {\n      this.setError(err);\n    } finally {\n      this.unsetLoading();\n    }\n  };\n\n  logout = async () => {\n    this.setLoading();\n    this.unsetError();\n\n    try {\n      await this.service.logout();\n      this.notify.successNotification(\"До скорых встреч!\");\n    } catch (err) {\n      this.setError(err);\n    } finally {\n      this.unsetLoading();\n    }\n  };\n}\n","import { action, makeObservable, observable } from \"mobx\";\nimport { INotification, INotificationsVM } from \"./types\";\n\nexport class NotificationsVM implements INotificationsVM {\n  notification: INotification | null = null;\n\n  constructor() {\n    makeObservable(this, {\n      notification: observable,\n      addNotification: action,\n      removeNotification: action,\n    });\n  }\n\n  successNotification = (message: string): void => {\n    this.addNotification({\n      type: \"success\",\n      message: message,\n    });\n  };\n\n  errorNotification = (message: string): void => {\n    this.addNotification({\n      type: \"error\",\n      message: message,\n    });\n  };\n\n  addNotification = (notification: INotification): void => {\n    this.notification = notification;\n  };\n\n  removeNotification = (): void => {\n    this.notification = null;\n  };\n}\n","import { BaseVM } from \"../BaseVM\";\nimport { IOrderVM } from \"./types\";\nimport { INotificationsVM } from \"../types\";\nimport { action, makeObservable, observable } from \"mobx\";\nimport {\n  IOrderItemEntity,\n  IOrderItemRequestParams,\n} from \"../../../data/entities/Order/types\";\nimport { IOrderService } from \"../../../data/services/Order/types\";\n\nexport class OrderVM extends BaseVM implements IOrderVM {\n  orders: IOrderItemEntity[] | null = [];\n\n  constructor(\n    notificationsVM: INotificationsVM,\n    private service: IOrderService\n  ) {\n    super(notificationsVM);\n\n    makeObservable(this, {\n      orders: observable,\n      getList: action,\n    });\n  }\n\n  getList = async (params: IOrderItemRequestParams): Promise<void> => {\n    await this.service.getList(params);\n  };\n}\n","import { IStoreServices, IStoreViewModels, IViewModels } from \"./types\";\nimport { AgencyVM } from \"../view/viewModels/Agency\";\nimport { UserVM } from \"../view/viewModels/User\";\nimport { NotificationsVM } from \"../view/viewModels/NotificationsVM\";\nimport { OrderVM } from \"../view/viewModels/Order\";\n\nexport class ViewModelsStore implements IStoreViewModels {\n  private store: IViewModels = {};\n\n  get notifications() {\n    if (!this.store.notifications) {\n      this.store.notifications = new NotificationsVM();\n    }\n\n    return this.store.notifications;\n  }\n\n  get agency() {\n    if (!this.store.agency) {\n      this.store.agency = new AgencyVM(\n        this.notifications,\n        this.services.agency\n      );\n    }\n\n    return this.store.agency;\n  }\n\n  get user() {\n    if (!this.store.user) {\n      this.store.user = new UserVM(this.notifications, this.services.user);\n    }\n\n    return this.store.user;\n  }\n\n  get order() {\n    if (!this.store.order) {\n      this.store.order = new OrderVM(this.notifications, this.services.order);\n    }\n\n    return this.store.order;\n  }\n\n  constructor(private services: IStoreServices) {}\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\n        \"errorBoundaryPage during service worker registration:\",\n        error\n      );\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { ErrorInfo } from \"react\";\nimport { Collapse, IconButton, Typography } from \"@mui/material\";\nimport css from \"./styles.module.scss\";\nimport SentimentVeryDissatisfiedOutlinedIcon from \"@mui/icons-material/SentimentVeryDissatisfiedOutlined\";\nimport { IProps, IState } from \"./types\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\n\n// TODO вынести компоненты\n// TODO плашка находится за шапкой\nexport class ErrorBoundary extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      error: null,\n      errorInfo: null,\n      expanded: false,\n      offline: !navigator.onLine,\n      timerID: null,\n    };\n  }\n\n  componentDidMount() {\n    const timerID = setInterval(() => {\n      if (!navigator.onLine !== this.state.offline) {\n        this.setState({\n          offline: !navigator.onLine,\n        });\n      }\n    }, 10000);\n\n    this.setState({\n      timerID,\n    });\n  }\n\n  componentWillUnmount() {\n    this.state.timerID && clearInterval(this.state.timerID);\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // TODO логирование ошибок, автоматическая отправка данных об ошибке на сервер или на почту админов.\n    console.log(error.name);\n    console.log(error.message);\n    console.log(error.stack);\n  }\n\n  handleExpand = () => {\n    this.setState({ expanded: !this.state.expanded });\n  };\n\n  render() {\n    if (this.state.errorInfo) {\n      return (\n        <div className={css.errorBoundary}>\n          <Typography align=\"center\" className={css.icon} color=\"error.main\">\n            <SentimentVeryDissatisfiedOutlinedIcon fontSize=\"inherit\" />\n          </Typography>\n\n          <Typography variant=\"h6\" align=\"center\" color=\"error.main\">\n            Произошла ошибка при работе с приложением\n          </Typography>\n\n          <Typography\n            variant=\"subtitle1\"\n            align=\"center\"\n            color=\"error.main\"\n            onClick={this.handleExpand}\n            className={css.collapseTitle}\n          >\n            {this.state.error && this.state.error.toString()}{\" \"}\n            <IconButton aria-label=\"expand\">\n              {this.state.expanded ? <ExpandLess /> : <ExpandMore />}\n            </IconButton>\n          </Typography>\n\n          <Collapse\n            in={this.state.expanded}\n            timeout=\"auto\"\n            unmountOnExit\n            className={css.collapse}\n          >\n            <Typography align=\"center\">\n              {this.state.error && this.state.error.toString()}\n            </Typography>\n\n            <br />\n\n            <Typography align=\"center\">\n              {this.state.errorInfo.componentStack}\n            </Typography>\n          </Collapse>\n        </div>\n      );\n    }\n\n    return (\n      <span className={css.appWrapper}>\n        {this.state.offline && (\n          <Typography className={css.notConnectText}>\n            Отсутствует интернет соединение\n          </Typography>\n        )}\n        {this.props.children}\n      </span>\n    );\n  }\n}\n","import { FC } from \"react\";\nimport { Alert, Snackbar } from \"@mui/material\";\n\nimport { INotify } from \"./types\";\n\nexport const Notify: FC<INotify> = ({ open, onClose, type, message }) => {\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={true}\n      autoHideDuration={3000}\n      onClose={onClose}\n    >\n      <Alert\n        variant=\"filled\"\n        severity={type}\n        onClose={onClose}\n        closeText=\"Закрыть\"\n      >\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n","import { FC, lazy, Suspense } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useRoute } from \"react-router5\";\n\nimport { LoadingScreen } from \"./components/common/LoadingScreen\";\nimport { useNotification } from \"./hooks/useNotification\";\nimport { Notify } from \"./components/common/Notify\";\n\nconst UnauthorizedApp = lazy(() => import(\"./UnauthorizedApp\"));\nconst AuthorizedApp = lazy(() => import(\"./AuthorizedApp\"));\n\nexport const App: FC = observer(() => {\n  const { notification, removeNotification } = useNotification();\n\n  const {\n    route: { name },\n  } = useRoute();\n\n  const isUnauthorized = name === \"login\";\n\n  return (\n    <>\n      <Notify\n        open={!!notification}\n        type={notification?.type || \"error\"}\n        message={notification?.message || \"\"}\n        onClose={removeNotification}\n      />\n\n      <Suspense fallback={<LoadingScreen />}>\n        {isUnauthorized ? <UnauthorizedApp /> : <AuthorizedApp />}\n      </Suspense>\n    </>\n  );\n});\n\nexport default App;\n","import { useStore } from \"./useStore\";\nimport { INotificationsVM } from \"../../viewModels/types\";\n\n/**\n * Возвращает запрошенную методы для работы с уведомлениями из хранилища.\n */\nexport const useNotification = (): INotificationsVM =>\n  useStore()[\"notifications\"];\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"../../reportWebVitals\";\nimport * as serviceWorkerRegistration from \"../../serviceWorkerRegistration\";\nimport {\n  CssBaseline,\n  StyledEngineProvider,\n  ThemeProvider,\n} from \"@mui/material\";\nimport { RouterProvider } from \"react-router5\";\nimport { Router } from \"router5/dist/types/router\";\nimport { IDependencies } from \"../../router/types\";\nimport { Theme } from \"@mui/material/styles/createTheme\";\nimport { ErrorBoundary } from \"./pages/errorBoundaryPage\";\nimport App from \"./App\";\n\ntype IAppInitConfig = {\n  router: Router<IDependencies>;\n  theme: Theme;\n};\n\nexport const initApp = ({ router, theme }: IAppInitConfig) => {\n  ReactDOM.render(\n    <StrictMode>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <StyledEngineProvider injectFirst>\n          {/* @ts-ignore */}\n          <RouterProvider router={router}>\n            <ErrorBoundary>\n              <App />\n            </ErrorBoundary>\n          </RouterProvider>\n        </StyledEngineProvider>\n      </ThemeProvider>\n    </StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import ReactDOM from \"react-dom\";\nimport { lazy, StrictMode, Suspense } from \"react\";\nimport { CssBaseline, StyledEngineProvider } from \"@mui/material\";\n\nconst InitErrorPage = lazy(() => import(\"./pages/initError\"));\n\nexport const initErrorApp = (error: any) => {\n  ReactDOM.render(\n    <StrictMode>\n      <StyledEngineProvider injectFirst>\n        <CssBaseline />\n        <Suspense fallback={<div>Загрузка...</div>}>\n          <InitErrorPage error={error} />\n        </Suspense>\n      </StyledEngineProvider>\n    </StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n","export const getCssVar = (varName: string): string => {\n  return getComputedStyle(document.documentElement)\n    .getPropertyValue(varName)\n    .trim();\n};\n","import { createTheme } from \"@mui/material\";\nimport { getCssVar } from \"./getCssVar\";\n\nconst theme = createTheme({\n  palette: {\n    common: {\n      white: getCssVar(\"--yy-white-color\"),\n    },\n    error: {\n      main: getCssVar(\"--yy-error-color\"),\n    },\n    background: {\n      default: getCssVar(\"--yy-default-background\"),\n    },\n  },\n  components: {\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          borderRadius: 8,\n        },\n      },\n    },\n    MuiAppBar: {\n      styleOverrides: {\n        root: {\n          borderRadius: 0,\n        },\n      },\n    },\n    MuiDrawer: {\n      styleOverrides: {\n        paper: {\n          borderRadius: 0,\n        },\n      },\n    },\n    MuiFormHelperText: {\n      styleOverrides: {\n        root: {\n          marginLeft: 0,\n          marginTop: 0,\n        },\n      },\n    },\n    MuiDivider: {\n      styleOverrides: {\n        root: {\n          backgroundColor: getCssVar(\"--yy-divider-color\"),\n        },\n      },\n    },\n    MuiSnackbar: {\n      styleOverrides: {\n        anchorOriginTopRight: {\n          left: \"auto\",\n          marginLeft: 8,\n\n          \".MuiAlert-message\": {\n            wordBreak: \"break-word\",\n          },\n        },\n      },\n    },\n  },\n  typography: {\n    button: {\n      textTransform: \"none\",\n    },\n  },\n});\n\nexport default theme;\n","import { IDependencies, IRoute } from \"../types\";\n\n/**\n * Кэш роутов.\n */\nlet cache: Record<string, IRoute> = {};\n\nexport const getRouteByToStateName = (\n  toStateName: string,\n  dependencies: IDependencies\n): IRoute | undefined => {\n  // роут не найдет в кэше\n  if (!(toStateName in cache)) {\n    const nameSplit = toStateName.split(\".\");\n\n    let route: IRoute | undefined;\n\n    nameSplit.forEach((name, index) => {\n      if (index === 0) {\n        route = dependencies.routes.find((route) => {\n          return route.name === name;\n        });\n      } else {\n        route = route?.children?.find((route) => {\n          return route.name === name;\n        });\n      }\n    });\n    if (route) {\n      // сохроняем в кэш, если роут найден\n      cache[toStateName] = route;\n    }\n  }\n\n  return cache[toStateName];\n};\n","import createAppRouter from \"./router\";\nimport { ViewModelsInitializer } from \"./store\";\nimport { initApp } from \"./view/UI\";\nimport theme from \"./view/UI/theme\";\nimport { initErrorApp } from \"./view/UI/InitErrorApp\";\nimport routes from \"./router/routes\";\nimport { checkAuthorization, onActivate } from \"./router/middlewaries\";\nimport { documentTitle } from \"./router/middlewaries/documentTitle\";\n\ntry {\n  const BUILD_MODE = process.env.REACT_APP_BUILD_MODE;\n  const NODE_ENV = process.env.NODE_ENV;\n\n  if (\n    BUILD_MODE === \"serve\" ||\n    BUILD_MODE === \"gh-pages\" ||\n    NODE_ENV === \"development\"\n  ) {\n    const { worker } = require(\"./libs/mocks/browser\");\n\n    worker.start({\n      onUnhandledRequest: \"bypass\",\n      serviceWorker: {\n        url: `/${\n          BUILD_MODE === \"gh-pages\" ? \"yul-yort-admin/\" : \"\"\n        }mockServiceWorker.js`,\n      },\n    });\n  }\n\n  const router = createAppRouter(routes, [\n    onActivate,\n    checkAuthorization,\n    documentTitle,\n  ]);\n  const viewModels = new ViewModelsInitializer(router).viewModels;\n\n  router.setDependencies({ store: viewModels, routes });\n  router.start();\n\n  initApp({\n    router,\n    theme,\n  });\n} catch (err) {\n  initErrorApp(err);\n}\n","import createRouter from \"router5\";\nimport browserPlugin from \"router5-plugin-browser\";\nimport { MiddlewareFactory, Router } from \"router5/dist/types/router\";\n\nimport { IDependencies, IRoutes } from \"./types\";\n\nexport default function createAppRouter(\n  routes: IRoutes,\n  middlewares: MiddlewareFactory<IDependencies>[]\n): Router<IDependencies> {\n  const router = createRouter<IDependencies>(routes, {\n    allowNotFound: true,\n    queryParamsMode: \"loose\",\n    autoCleanUp: true,\n  });\n\n  const BUILD_MODE = process.env.REACT_APP_BUILD_MODE;\n\n  router.usePlugin(\n    browserPlugin({\n      useHash: BUILD_MODE === \"serve\" || BUILD_MODE === \"gh-pages\",\n    })\n  );\n\n  middlewares.forEach((middleware) => router.useMiddleware(middleware));\n\n  return router;\n}\n","import { MiddlewareFactory } from \"router5/dist/types/router\";\nimport { IDependencies, IRoute, IRouteWithParams } from \"../types\";\nimport { getRouteByToStateName } from \"./utils\";\n\n/**\n * Плагин вызывает метод onActivate у текущего роута, если данный метод в нем прописан.\n *\n * @param router\n * @param dependencies\n */\nexport const onActivate: MiddlewareFactory<IDependencies> =\n  (router, dependencies) =>\n  (toState): boolean => {\n    let route: IRoute | IRouteWithParams | undefined = getRouteByToStateName(\n      toState.name,\n      dependencies\n    );\n\n    route?.onActivate &&\n      route?.onActivate({\n        store: dependencies.store,\n        params: toState.params,\n        router,\n      });\n\n    return true;\n  };\n","import { constants } from \"router5\";\nimport { Middleware, MiddlewareFactory } from \"router5/dist/types/router\";\n\nimport { getRouteByToStateName } from \"./utils\";\nimport { IDependencies, IRoute } from \"../types\";\nimport { checkToken } from \"../../libs/utils/checkToken\";\nimport { CONSTANTS } from \"../../constants/globalConstants\";\n\n/**\n * Плагин проверяет авторизацию.\n * Если текущая страница /login и пользователь авторизован, то перенаправит на\n * страницу по умолчанию (dashboard).\n *\n * Если текущая страница не найдена и пользователь не авторизован,\n * то перенаправит на страницу авторизации.\n *\n * Если текущая страница содежит поле auth и пользователь не авторизован,\n * то перенаправит на страницу авторизации с параметрами текущей страницы.\n *\n * @param router\n * @param dependencies\n */\nexport const checkAuthorization: MiddlewareFactory<IDependencies> =\n  (router, dependencies): Middleware =>\n  (toState, _, done) => {\n    const toStateName = toState.name;\n    let route: IRoute | undefined = getRouteByToStateName(\n      toStateName,\n      dependencies\n    );\n\n    const hasToken = checkToken();\n\n    // Если текущая страница /login, то перенаправит на страницу по умолчанию.\n    if (toStateName === \"login\" && hasToken) {\n      return done({\n        redirect: {\n          name: CONSTANTS.defaultRoute,\n        },\n      });\n    }\n\n    // Если текущая страница не найдена и пользователь не авторизован, то перенаправит на страницу авторизации.\n    if (toStateName === constants.UNKNOWN_ROUTE && !hasToken) {\n      return done({\n        redirect: {\n          name: \"login\",\n        },\n      });\n    }\n\n    // Если текущая страница содежит поле auth и пользователь не авторизован, то перенаправит\n    // на страницу авторизации с параметрами текущей страницы.\n    if (route?.auth && !hasToken) {\n      return done({\n        redirect: {\n          name: \"login\",\n          params: {\n            redirectName: toStateName,\n            redirectParams: toState.params,\n          },\n        },\n      });\n    }\n\n    return true;\n  };\n","import { MiddlewareFactory } from \"router5/dist/types/router\";\nimport { IDependencies, IRoute } from \"../types\";\nimport { CONSTANTS } from \"../../constants/globalConstants\";\nimport { getRouteByToStateName } from \"./utils\";\nimport { setDocumentTitle } from \"../../libs/utils\";\n\n/**\n * Плагин синхронно меняет заголовок документа.\n * Для асинхронной или отложенной замены используйте onActivate в src/router/routes.ts.\n *\n * @param router: Router\n * @param dependencies: IDependencies\n */\nexport const documentTitle: MiddlewareFactory<IDependencies> =\n  (router, dependencies) =>\n  (toState): boolean => {\n    let route: IRoute | undefined = getRouteByToStateName(\n      toState.name,\n      dependencies\n    );\n\n    setDocumentTitle(route?.title || CONSTANTS.projectName);\n\n    return true;\n  };\n","import {\n  IStoreLibs,\n  IStoreRepositories,\n  IStoreServices,\n  IStoreViewModels,\n} from \"./types\";\nimport { LibsStore } from \"./LibsStore\";\nimport { RepositoriesStore } from \"./RepositoriesStore\";\nimport { ServicesStore } from \"./ServicesStore\";\nimport { ViewModelsStore } from \"./ViewModelsStore\";\nimport { Router } from \"router5/dist/types/router\";\nimport { IDependencies } from \"../router/types\";\n\nexport class ViewModelsInitializer {\n  viewModels: IStoreViewModels;\n\n  constructor(router: Router<IDependencies>) {\n    const libs: IStoreLibs = new LibsStore(router);\n    const repositories: IStoreRepositories = new RepositoriesStore(libs);\n    const services: IStoreServices = new ServicesStore(repositories);\n\n    this.viewModels = new ViewModelsStore(services);\n  }\n}\n","import { IAgencyResponseDTO } from \"../../../data/entities/Agency/types\";\n\nexport const agencies: IAgencyResponseDTO[] = [\n  {\n    id: \"1\",\n    phones: [\"+79999999999\", \"80000000000\"],\n    createDate: new Date(1).getTime(),\n    editedDate: new Date().getTime(),\n    description:\n      \"О-о о-о, зеленоглазое такси, о-о о-о, притормози, притормози \\n\" +\n      \"О-о о-о, ты отвези меня туда, о-о о-о, где будут рады мне всегда, всегда, да, да.\",\n    agencyName: \"Зеленоглазое такси\",\n  },\n  {\n    id: \"2\",\n    agencyName: \"Давай подвезём!\",\n    phones: [],\n    createDate: new Date().getTime(),\n    editedDate: new Date().getTime(),\n  },\n  {\n    id: \"3\",\n    agencyName: \"По пути\",\n    phones: [\"+79999999999\"],\n    createDate: new Date().getTime(),\n    editedDate: new Date().getTime(),\n    description: \"Нам с Вами по пути!\",\n  },\n];\n","/**\n * Возвращает рандомное время для задержки запроса от 0 до 10 сек. .\n *\n * @param delay - переданное время. Если этот аргумент передан, то в качестве задержки будет использоваться переданное значение.\n */\nexport const getTimeout = (delay?: number): number => {\n  if (delay || delay === 0) {\n    return delay;\n  }\n\n  return Math.floor(Math.random() * 3000);\n};\n","import * as cookieUtils from \"cookie\";\nimport { CONSTANTS } from \"../../../constants/globalConstants\";\n\ntype TCookieData = [\n  name: string,\n  value: string,\n  options: cookieUtils.CookieSerializeOptions\n];\n\nexport const getAuthCookie = (method?: \"login\" | \"logout\"): TCookieData => {\n  let expires: Date = new Date();\n  expires.setDate(new Date().getDate() + 1);\n\n  if (method === \"logout\") {\n    expires = new Date(0);\n  }\n\n  return [\n    CONSTANTS.tokenCookieKey,\n    \"abc - 123\",\n    {\n      expires,\n      path: \"/\",\n    },\n  ];\n};\n","import { rest } from \"msw\";\nimport {\n  IAgencyItemResponseDTO,\n  IAgencyResponseDTO,\n} from \"../../data/entities/Agency/types\";\nimport { agencies } from \"./data\";\nimport { getTimeout } from \"./utils/getTimeout\";\nimport { EEndpoints } from \"../../constants/Endpoints\";\nimport { getAuthCookie } from \"./utils/getAuthCookie\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const handlers = [\n  rest.get(EEndpoints.AGENCY, (req, res, ctx) => {\n    const url = new URL(req.url);\n    const id = url.searchParams.get(\"id\");\n\n    const result: IAgencyResponseDTO | {} =\n      agencies.find((agency) => agency.id === id) || {};\n    let status = Object.keys(result).length ? 200 : 404;\n\n    return res(\n      ctx.json<IAgencyResponseDTO | {}>(result),\n      ctx.delay(getTimeout()),\n      ctx.status(status)\n    );\n  }),\n\n  rest.post<string>(EEndpoints.AGENCY_EDIT, (req, res, ctx) => {\n    const body = JSON.parse(req.body);\n    const result: IAgencyResponseDTO | {} =\n      agencies.find((agency, index) => {\n        if (agency.id === body.id) {\n          agencies[index] = { ...agency, ...body };\n\n          return true;\n        }\n        return false;\n      }) || {};\n    let status = Object.keys(result).length ? 200 : 404;\n\n    return res(\n      ctx.json<IAgencyResponseDTO>({ ...result, ...body }),\n      ctx.delay(getTimeout()),\n      ctx.status(status)\n    );\n  }),\n\n  rest.delete<string>(EEndpoints.AGENCY_DELETE, (req, res, ctx) => {\n    const body = JSON.parse(req.body);\n    const result: IAgencyResponseDTO | {} =\n      agencies.find((agency, index) => {\n        if (agency.id === body.id) {\n          agencies.splice(index, 1);\n\n          return true;\n        }\n        return false;\n      }) || {};\n    let status = Object.keys(result).length ? 200 : 404;\n\n    return res(\n      ctx.json<IAgencyResponseDTO | {}>(result),\n      ctx.delay(getTimeout()),\n      ctx.status(status)\n    );\n  }),\n\n  rest.get(EEndpoints.AGENCY_LIST, (req, res, ctx) => {\n    return res(\n      ctx.json<IAgencyItemResponseDTO[]>(agencies),\n      ctx.delay(getTimeout()),\n      ctx.status(200)\n    );\n  }),\n\n  rest.post<string>(EEndpoints.AGENCY_CREATE, (req, res, ctx) => {\n    agencies.unshift({ id: uuid(), ...JSON.parse(req.body) });\n\n    return res(\n      ctx.json<IAgencyItemResponseDTO>(agencies[0]),\n      ctx.delay(getTimeout()),\n      ctx.status(200)\n    );\n  }),\n\n  rest.post<string>(EEndpoints.LOGIN, (req, res, ctx) => {\n    return res(\n      ctx.json({}),\n      ctx.delay(getTimeout()),\n      ctx.status(200),\n      ctx.cookie(...getAuthCookie(\"login\"))\n    );\n  }),\n\n  rest.post<string>(EEndpoints.LOGOUT, (req, res, ctx) => {\n    return res(\n      ctx.json({}),\n      ctx.delay(getTimeout()),\n      ctx.status(200),\n      ctx.cookie(...getAuthCookie(\"logout\"))\n    );\n  }),\n];\n","import { setupWorker } from 'msw'\nimport { handlers } from './handlers'\n\nexport const worker = setupWorker(...handlers)\n","export const baseUrl = window.location.origin;\n\nexport enum EEndpoints {\n  AGENCY = \"/agency\",\n  AGENCY_EDIT = \"/agency-edit\",\n  AGENCY_DELETE = \"/agency-delete\",\n  AGENCY_LIST = \"/agency-list\",\n  AGENCY_CREATE = \"/agency-create\",\n  LOGIN = \"/login\",\n  LOGOUT = \"/logout\",\n}\n","export const CONSTANTS = {\n  projectName: \"Yul-Yort Admin\",\n  tokenCookieKey: \"auth-token\",\n  defaultRoute: \"dashboard\",\n  numberPattern: /^[1-9]\\d*(\\d+)?$/i,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"styles_appWrapper__1s6mj\",\"errorBoundary\":\"styles_errorBoundary__3Bs9q\",\"icon\":\"styles_icon__3gfCw\",\"collapse\":\"styles_collapse__1ZfSw\",\"collapseTitle\":\"styles_collapseTitle__20hrk\",\"notConnectText\":\"styles_notConnectText__ebZ80\"};","import { IFormPhone } from \"./types\";\n\nexport const UIPhonesFormatter = (phones: string[]): IFormPhone[] =>\n  phones.map((phone) => ({ value: phone }));\n\nexport const VMPhonesRequestFormatter = (phones: IFormPhone[]): string[] =>\n  phones.map((phoneValue) => phoneValue.value);\n","import { FieldErrors } from \"react-hook-form/dist/types/errors\";\n\nconst ErrorsDictionary: Record<string, string> = {\n  required: \"Обязательное поле\",\n  min: \"Превышена максимальная длина\",\n  max: \"Превышено максимальное значение\",\n  maxLength: \"Превышена максимальная длина\",\n  minLength: \"Меньше допустимой длины\",\n  default: \"Неопознанная ошибка\",\n};\n\nexport const getErrorText = (\n  errors: FieldErrors = {},\n  valuePath: string,\n  index?: number\n): string | undefined => {\n  let error = errors[valuePath];\n\n  if (error && index !== undefined) {\n    error = error[index]?.value;\n  }\n\n  if (!error) {\n    return void 0;\n  }\n\n  return error.message || ErrorsDictionary[error.type] || error.type;\n};\n","export const setDocumentTitle = (title?: string) => {\n  if (title) {\n    document.title = title;\n  }\n};\n","import Cookies from \"js-cookie\";\n\nimport { CONSTANTS } from \"../../constants/globalConstants\";\n\nexport const checkToken = (): boolean => {\n  return !!Cookies.get(CONSTANTS.tokenCookieKey);\n};\n","import { IRoutes } from \"./types\";\nimport { CONSTANTS } from \"../constants/globalConstants\";\nimport { setDocumentTitle } from \"../libs/utils\";\n\nconst routes: IRoutes = [\n  {\n    name: \"login\",\n    path: \"/login\",\n    title: \"Авторизация\",\n  },\n  {\n    name: CONSTANTS.defaultRoute,\n    path: \"/\",\n    title: \"Dashboard\",\n    auth: true,\n  },\n  {\n    name: \"agencies\",\n    path: \"/agencies\",\n    title: \"Список агентств\",\n    auth: true,\n    onActivate: async (props) => {\n      if (!props) return;\n\n      const { store } = props;\n      await store.agency.getList();\n    },\n    children: [\n      {\n        name: \"agency\",\n        path: \"/:id\",\n        title: \"Агенство\",\n        auth: true,\n        onActivate: async (props) => {\n          if (!props || !props.params) return;\n\n          const { store, params } = props;\n\n          await store.agency.getAgency(params);\n\n          setDocumentTitle(store.agency.agency?.agencyName);\n        },\n      },\n    ],\n  },\n];\n\nexport default routes;\n"],"sourceRoot":""}